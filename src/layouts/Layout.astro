---
import "@fancyapps/ui/dist/fancybox/fancybox.css";
import '../globals.css';
import CV from "@cv";
import Analytics from '@vercel/analytics/astro';
import BackgroundArt from "../components/BackgroundArt.astro"

interface Props {
  title: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
  keywords?: string[];
}

const { 
  title,
  image = CV.basics.image,
  canonicalURL = CV.basics.url,
  keywords = [
    "清羽飞扬",
    "LiuShen",
    "柳神",
    "个人主页",
    "软件开发工程师",
    "大模型研发",
    "项目合集",
    "个人主页"
  ]
} = Astro.props;

const { url, theme, name, location } = CV.basics;
const { city, region } = location;

// Create a more detailed description
const detailedDescription = `LiuShen (柳神) - Full Stack Developer. Explore my portfolio, projects, and contact info. Frontend, backend, and more.`;

// Create structured data for better SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "Person",
  "name": name,
  "alternateName": "AJ Dev",
  "jobTitle": CV.basics.label,
  "url": url,
  "email": CV.basics.email,
  "alumniOf": (CV as any).education?.[0]?.institution,
  "knowsLanguage": CV.languages?.map(lang => lang.language),
  "sameAs": CV.basics.profiles.map(profile => profile.url),
  "image": image,
  "description": detailedDescription,
  "address": {
    "@type": "PostalAddress",
    "addressLocality": city,
    "addressRegion": region,
    "addressCountry": "IN"
  },
  "knowsAbout": CV.skills.map(skill => skill.name),
  "worksFor": CV.work?.map(work => ({
    "@type": "Organization",
    "name": work.name,
    "position": work.position
  }))
};

const breadcrumbSchema = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "name": "Home",
      "item": url
    },
    {
      "@type": "ListItem",
      "position": 2,
      "name": "Projects",
      "item": `${url}#projects`
    },
    {
      "@type": "ListItem",
      "position": 3,
      "name": "About",
      "item": `${url}#about`
    },
    {
      "@type": "ListItem",
      "position": 4,
      "name": "Contact",
      "item": `${url}#contact`
    }
  ]
};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={detailedDescription} />
    <meta name="author" content={name} />
    <meta name="keywords" content={keywords.join(", ")} />
    <meta name="geo.region" content="IN-HR" />
    <meta name="geo.placename" content={city} />
    
    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Favicon -->
    <link rel="icon" href="/favicon.ico" type="image/x-icon"/>
    <link rel="apple-touch-icon" href="/apple-touch-icon.webp" />
    
    <!-- Preload critical assets -->
    <link rel="preload" as="image" href={image} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={detailedDescription} />
    <meta property="og:image" content={image} />
    <meta property="og:site_name" content={`${name}'s Portfolio`} />
    <meta property="og:locale" content="en_IN" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:domain" content={url.split("//")[1] ?? ""} />
    <meta name="twitter:url" content={url} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={detailedDescription} />
    <meta name="twitter:image" content={image} />
    <meta name="twitter:creator" content={CV.basics.profiles.find(p => p.network === 'X / Twitter')?.username} />
    
    <!-- Additional meta tags -->
    <meta name="theme-color" content={theme === 'dark' ? '#1a1a1a' : '#ffffff'} />
    <meta name="referrer" content="no-referrer" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Structured Data -->
    <script is:inline type="application/ld+json" set:html={JSON.stringify(structuredData)} />
    <script is:inline type="application/ld+json" set:html={JSON.stringify(breadcrumbSchema)} />
    
    {CV?.analyticsCode && <script is:inline src={CV.analyticsCode} />}
    <Analytics />
    <meta name="google-site-verification" content="oi4G-5FCwNn5m9MvSyjyBxVatgwi8KT_KtVuC9Pckmg" />
  </head>
  <body data-theme={theme} class="relative bg-skin-fill font-sans">
    <div class="absolute top-0 -z-10 h-full w-full print:hidden">
      <div class="absolute bottom-auto left-[20%] right-auto top-0 h-[200px] w-[200px] -translate-x-[30%] translate-y-[20%] rounded-full bg-skin-hue/10 blur-[80px] invert-0 dark:bg-white/5"></div>
    </div>
    <slot />
    <script src="../scripts/main.ts"></script>
    <BackgroundArt/>
  </body>
</html>

<style>

  body{
    * {
    @apply rounded-lg;
    cursor: none !important;
    -webkit-user-drag: none;
    }
  }
  
  a {
    text-decoration: none;
  }
  
  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
  
  h1,
  h2,
  h3,
  h4 {
    @apply text-skin-base font-sans;
    margin: 0;
  }
  
  p {
    @apply text-sm text-skin-muted;
    line-height: 1.5;
    text-wrap: pretty;
  }
  
  .print {
    display: none !important;
  }
  
  .dev * {
    @apply border border-red-500/50 bg-red-500/5;
  }
  #hotkeypad [data-backdrop] {
    @apply !bg-zinc-800 !opacity-80;
  }
  
  ::-webkit-scrollbar {
    width: 2px;
  }
  
  @media print {
    .print {
      display: block !important;
    }
    
    astro-dev-toolbar {
      display: none !important;
    }
    
    article {
      break-inside: avoid;
    }
  }
</style>
